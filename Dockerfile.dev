# Development Dockerfile with Air hot-reload for FANET API
FROM golang:1.23-alpine

# Install dependencies including protobuf compiler
RUN apk add --no-cache \
    git \
    ca-certificates \
    protobuf \
    protobuf-dev \
    curl \
    bash \
    mysql-client \
    # MQTT tools for debugging
    mosquitto-clients \
    # Process monitoring
    htop \
    # Text processing
    ripgrep

# Install essential Go development tools (compatible with Go 1.23)
RUN go install -v github.com/go-delve/delve/cmd/dlv@latest \
    && go install -v honnef.co/go/tools/cmd/staticcheck@latest \
    && go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest

# Install Protocol Buffers Go plugins
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest \
    && go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

# Install air for hot reload during development (specific version for stability)
RUN go install github.com/cosmtrek/air@v1.49.0

# Install useful development tools
RUN go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest \
    && go install github.com/pressly/goose/v3/cmd/goose@latest

# Set working directory
WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Generate protobuf files
RUN mkdir -p pkg/pb && \
    protoc --go_out=pkg/pb --go_opt=paths=source_relative \
    --go-grpc_out=pkg/pb --go-grpc_opt=paths=source_relative \
    -I ai-spec/api \
    ai-spec/api/fanet.proto

# Create necessary directories
RUN mkdir -p tmp bin logs

# Make scripts executable
RUN chmod +x scripts/*.sh 2>/dev/null || true

# Expose ports
EXPOSE 8090 9090

# Set environment variables for development
ENV CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64 \
    GO111MODULE=on \
    GOPROXY=https://proxy.golang.org,direct \
    GOPATH=/go \
    PATH="/go/bin:${PATH}"

# Initialize git repository for VCS info
RUN git config --global user.email "dev@flybeeper.com" && \
    git config --global user.name "Dev Container"

# Run with Air for hot reload
CMD ["air", "-c", ".air.toml"]