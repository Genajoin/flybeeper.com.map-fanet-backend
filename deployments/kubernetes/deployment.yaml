apiVersion: apps/v1
kind: Deployment
metadata:
  name: fanet-api
  namespace: fanet
  labels:
    app.kubernetes.io/name: fanet-backend
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: flybeeper-platform
    app.kubernetes.io/version: "1.0.0"
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "FANET Backend API deployment - высокопроизводительный Go backend"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: fanet-backend
      app.kubernetes.io/component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fanet-backend
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: flybeeper-platform
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fanet-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - fanet-backend
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname
      containers:
      - name: fanet-api
        image: flybeeper/fanet-api:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8090
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Configuration from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: ENVIRONMENT
        - name: SERVER_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: SERVER_ADDRESS
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: SERVER_PORT
        - name: SERVER_READ_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: SERVER_READ_TIMEOUT
        - name: SERVER_WRITE_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: SERVER_WRITE_TIMEOUT
        - name: SERVER_IDLE_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: SERVER_IDLE_TIMEOUT
        # Redis Configuration
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: fanet-secrets
              key: REDIS_URL
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fanet-secrets
              key: REDIS_PASSWORD
              optional: true
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: REDIS_DB
        - name: REDIS_POOL_SIZE
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: REDIS_POOL_SIZE
        - name: REDIS_MIN_IDLE_CONNS
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: REDIS_MIN_IDLE_CONNS
        # MQTT Configuration
        - name: MQTT_URL
          valueFrom:
            secretKeyRef:
              name: fanet-secrets
              key: MQTT_URL
        - name: MQTT_USERNAME
          valueFrom:
            secretKeyRef:
              name: fanet-secrets
              key: MQTT_USERNAME
              optional: true
        - name: MQTT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fanet-secrets
              key: MQTT_PASSWORD
              optional: true
        - name: MQTT_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MQTT_CLIENT_ID
        - name: MQTT_CLEAN_SESSION
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MQTT_CLEAN_SESSION
        - name: MQTT_ORDER_MATTERS
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MQTT_ORDER_MATTERS
        - name: MQTT_TOPIC_PREFIX
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MQTT_TOPIC_PREFIX
        # MySQL Configuration
        - name: MYSQL_DSN
          valueFrom:
            secretKeyRef:
              name: fanet-secrets
              key: MYSQL_DSN
              optional: true
        - name: MYSQL_MAX_IDLE_CONNS
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MYSQL_MAX_IDLE_CONNS
        - name: MYSQL_MAX_OPEN_CONNS
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MYSQL_MAX_OPEN_CONNS
        # Auth Configuration
        - name: AUTH_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: fanet-secrets
              key: AUTH_ENDPOINT
        - name: AUTH_CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: AUTH_CACHE_TTL
        # Geo Configuration
        - name: DEFAULT_RADIUS_KM
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: DEFAULT_RADIUS_KM
        - name: MAX_RADIUS_KM
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MAX_RADIUS_KM
        - name: GEOHASH_PRECISION
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: GEOHASH_PRECISION
        # Performance Configuration
        - name: WORKER_POOL_SIZE
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: WORKER_POOL_SIZE
        - name: MAX_BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: MAX_BATCH_SIZE
        - name: BATCH_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: BATCH_TIMEOUT
        - name: WEBSOCKET_PING_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: WEBSOCKET_PING_INTERVAL
        - name: WEBSOCKET_PONG_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: WEBSOCKET_PONG_TIMEOUT
        # Monitoring Configuration
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: METRICS_ENABLED
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: METRICS_PORT
        # Features Configuration
        - name: ENABLE_MYSQL_FALLBACK
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: ENABLE_MYSQL_FALLBACK
        - name: ENABLE_PROFILING
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: ENABLE_PROFILING
        # Logging Configuration
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: fanet-config
              key: LOG_FORMAT
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
            ephemeral-storage: "100Mi"
          limits:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "500Mi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
      volumes:
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: "100Mi"
      - name: cache
        emptyDir:
          medium: Memory
          sizeLimit: "200Mi"
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fanet-api
  namespace: fanet
  labels:
    app.kubernetes.io/name: fanet-backend
    app.kubernetes.io/component: serviceaccount
    app.kubernetes.io/part-of: flybeeper-platform
automountServiceAccountToken: false